//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EnrollmentWorkflow.PracticeManager {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Practice", Namespace="http://schemas.datacontract.org/2004/07/EnrollmentService.Domain.Practice")]
    [System.SerializableAttribute()]
    public partial class Practice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingNpiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoingBusinessAsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> GoLiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> GoLiveDateQCUSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GoLiveSoonAsPossibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsIndividualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteBillingNpiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteDoingBusinessAsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteGoLiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteTaxIdOrSsnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SharedTaxIdSsnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxIdOrSsnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingNpi {
            get {
                return this.BillingNpiField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingNpiField, value) != true)) {
                    this.BillingNpiField = value;
                    this.RaisePropertyChanged("BillingNpi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoingBusinessAs {
            get {
                return this.DoingBusinessAsField;
            }
            set {
                if ((object.ReferenceEquals(this.DoingBusinessAsField, value) != true)) {
                    this.DoingBusinessAsField = value;
                    this.RaisePropertyChanged("DoingBusinessAs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GoLiveDate {
            get {
                return this.GoLiveDateField;
            }
            set {
                if ((this.GoLiveDateField.Equals(value) != true)) {
                    this.GoLiveDateField = value;
                    this.RaisePropertyChanged("GoLiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GoLiveDateQCUS {
            get {
                return this.GoLiveDateQCUSField;
            }
            set {
                if ((this.GoLiveDateQCUSField.Equals(value) != true)) {
                    this.GoLiveDateQCUSField = value;
                    this.RaisePropertyChanged("GoLiveDateQCUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GoLiveSoonAsPossible {
            get {
                return this.GoLiveSoonAsPossibleField;
            }
            set {
                if ((this.GoLiveSoonAsPossibleField.Equals(value) != true)) {
                    this.GoLiveSoonAsPossibleField = value;
                    this.RaisePropertyChanged("GoLiveSoonAsPossible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsIndividual {
            get {
                return this.IsIndividualField;
            }
            set {
                if ((this.IsIndividualField.Equals(value) != true)) {
                    this.IsIndividualField = value;
                    this.RaisePropertyChanged("IsIndividual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteAddress1 {
            get {
                return this.NoteAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.NoteAddress1Field, value) != true)) {
                    this.NoteAddress1Field = value;
                    this.RaisePropertyChanged("NoteAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteAddress2 {
            get {
                return this.NoteAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.NoteAddress2Field, value) != true)) {
                    this.NoteAddress2Field = value;
                    this.RaisePropertyChanged("NoteAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteBillingNpi {
            get {
                return this.NoteBillingNpiField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteBillingNpiField, value) != true)) {
                    this.NoteBillingNpiField = value;
                    this.RaisePropertyChanged("NoteBillingNpi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteCity {
            get {
                return this.NoteCityField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteCityField, value) != true)) {
                    this.NoteCityField = value;
                    this.RaisePropertyChanged("NoteCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteDoingBusinessAs {
            get {
                return this.NoteDoingBusinessAsField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteDoingBusinessAsField, value) != true)) {
                    this.NoteDoingBusinessAsField = value;
                    this.RaisePropertyChanged("NoteDoingBusinessAs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteGoLiveDate {
            get {
                return this.NoteGoLiveDateField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteGoLiveDateField, value) != true)) {
                    this.NoteGoLiveDateField = value;
                    this.RaisePropertyChanged("NoteGoLiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteName {
            get {
                return this.NoteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteNameField, value) != true)) {
                    this.NoteNameField = value;
                    this.RaisePropertyChanged("NoteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteState {
            get {
                return this.NoteStateField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteStateField, value) != true)) {
                    this.NoteStateField = value;
                    this.RaisePropertyChanged("NoteState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteTaxIdOrSsn {
            get {
                return this.NoteTaxIdOrSsnField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteTaxIdOrSsnField, value) != true)) {
                    this.NoteTaxIdOrSsnField = value;
                    this.RaisePropertyChanged("NoteTaxIdOrSsn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteZip {
            get {
                return this.NoteZipField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteZipField, value) != true)) {
                    this.NoteZipField = value;
                    this.RaisePropertyChanged("NoteZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SharedTaxIdSsn {
            get {
                return this.SharedTaxIdSsnField;
            }
            set {
                if ((this.SharedTaxIdSsnField.Equals(value) != true)) {
                    this.SharedTaxIdSsnField = value;
                    this.RaisePropertyChanged("SharedTaxIdSsn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxIdOrSsn {
            get {
                return this.TaxIdOrSsnField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxIdOrSsnField, value) != true)) {
                    this.TaxIdOrSsnField = value;
                    this.RaisePropertyChanged("TaxIdOrSsn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PracticeNotes", Namespace="http://schemas.datacontract.org/2004/07/EnrollmentService.Domain.Practice")]
    [System.SerializableAttribute()]
    public partial class PracticeNotes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingNpiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoingBusinessAsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GoLiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PracticeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxIdOrSsnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingNpi {
            get {
                return this.BillingNpiField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingNpiField, value) != true)) {
                    this.BillingNpiField = value;
                    this.RaisePropertyChanged("BillingNpi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoingBusinessAs {
            get {
                return this.DoingBusinessAsField;
            }
            set {
                if ((object.ReferenceEquals(this.DoingBusinessAsField, value) != true)) {
                    this.DoingBusinessAsField = value;
                    this.RaisePropertyChanged("DoingBusinessAs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GoLiveDate {
            get {
                return this.GoLiveDateField;
            }
            set {
                if ((object.ReferenceEquals(this.GoLiveDateField, value) != true)) {
                    this.GoLiveDateField = value;
                    this.RaisePropertyChanged("GoLiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PracticeId {
            get {
                return this.PracticeIdField;
            }
            set {
                if ((this.PracticeIdField.Equals(value) != true)) {
                    this.PracticeIdField = value;
                    this.RaisePropertyChanged("PracticeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxIdOrSsn {
            get {
                return this.TaxIdOrSsnField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxIdOrSsnField, value) != true)) {
                    this.TaxIdOrSsnField = value;
                    this.RaisePropertyChanged("TaxIdOrSsn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnrollmentStatus", Namespace="http://schemas.datacontract.org/2004/07/EnrollmentService.Domain.Practice")]
    [System.SerializableAttribute()]
    public partial class EnrollmentStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ClaimsApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ClaimsSentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EstimatedApprovalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayerListIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RemitsApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RemitsSentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SubmittedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ClaimsApproved {
            get {
                return this.ClaimsApprovedField;
            }
            set {
                if ((this.ClaimsApprovedField.Equals(value) != true)) {
                    this.ClaimsApprovedField = value;
                    this.RaisePropertyChanged("ClaimsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ClaimsSent {
            get {
                return this.ClaimsSentField;
            }
            set {
                if ((this.ClaimsSentField.Equals(value) != true)) {
                    this.ClaimsSentField = value;
                    this.RaisePropertyChanged("ClaimsSent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EstimatedApproval {
            get {
                return this.EstimatedApprovalField;
            }
            set {
                if ((this.EstimatedApprovalField.Equals(value) != true)) {
                    this.EstimatedApprovalField = value;
                    this.RaisePropertyChanged("EstimatedApproval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayerListId {
            get {
                return this.PayerListIdField;
            }
            set {
                if ((this.PayerListIdField.Equals(value) != true)) {
                    this.PayerListIdField = value;
                    this.RaisePropertyChanged("PayerListId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RemitsApproved {
            get {
                return this.RemitsApprovedField;
            }
            set {
                if ((this.RemitsApprovedField.Equals(value) != true)) {
                    this.RemitsApprovedField = value;
                    this.RaisePropertyChanged("RemitsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RemitsSent {
            get {
                return this.RemitsSentField;
            }
            set {
                if ((this.RemitsSentField.Equals(value) != true)) {
                    this.RemitsSentField = value;
                    this.RaisePropertyChanged("RemitsSent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SubmittedDate {
            get {
                return this.SubmittedDateField;
            }
            set {
                if ((this.SubmittedDateField.Equals(value) != true)) {
                    this.SubmittedDateField = value;
                    this.RaisePropertyChanged("SubmittedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PracticeManager.IPracticeManager")]
    public interface IPracticeManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPracticeManager/AddPractice", ReplyAction="http://tempuri.org/IPracticeManager/AddPracticeResponse")]
        long AddPractice(string siteId, EnrollmentWorkflow.PracticeManager.Practice practiceInfo, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPracticeManager/AddPracticeNotes", ReplyAction="http://tempuri.org/IPracticeManager/AddPracticeNotesResponse")]
        void AddPracticeNotes(EnrollmentWorkflow.PracticeManager.PracticeNotes practiceNotesInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPracticeManager/UpdatePractice", ReplyAction="http://tempuri.org/IPracticeManager/UpdatePracticeResponse")]
        void UpdatePractice(string siteId, EnrollmentWorkflow.PracticeManager.Practice practiceInfo, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPracticeManager/RemovePractice", ReplyAction="http://tempuri.org/IPracticeManager/RemovePracticeResponse")]
        void RemovePractice(string siteId, int practiceId, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPracticeManager/GetPractices", ReplyAction="http://tempuri.org/IPracticeManager/GetPracticesResponse")]
        EnrollmentWorkflow.PracticeManager.Practice[] GetPractices(string siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPracticeManager/GetPracticeDataForPracticeId", ReplyAction="http://tempuri.org/IPracticeManager/GetPracticeDataForPracticeIdResponse")]
        EnrollmentWorkflow.PracticeManager.Practice GetPracticeDataForPracticeId(long practiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPracticeManager/GetCountPracticesWithoutPayers", ReplyAction="http://tempuri.org/IPracticeManager/GetCountPracticesWithoutPayersResponse")]
        int GetCountPracticesWithoutPayers(string siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPracticeManager/GetPracticeProviderInfoForPracticeId", ReplyAction="http://tempuri.org/IPracticeManager/GetPracticeProviderInfoForPracticeIdResponse")]
        long[] GetPracticeProviderInfoForPracticeId(long practiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPracticeManager/GetPracticeEnrollmentStatusForPracticeId", ReplyAction="http://tempuri.org/IPracticeManager/GetPracticeEnrollmentStatusForPracticeIdRespo" +
            "nse")]
        System.Collections.Generic.Dictionary<int, EnrollmentWorkflow.PracticeManager.EnrollmentStatus> GetPracticeEnrollmentStatusForPracticeId(long practiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPracticeManager/UpdatePracticePayerSubmittedDate", ReplyAction="http://tempuri.org/IPracticeManager/UpdatePracticePayerSubmittedDateResponse")]
        void UpdatePracticePayerSubmittedDate(long practiceId, long[] payerListIds, System.DateTime submittedDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPracticeManager/PracticeExists", ReplyAction="http://tempuri.org/IPracticeManager/PracticeExistsResponse")]
        bool PracticeExists(string billingNpi, string taxIdOrSsn, string siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPracticeManager/ResetSite", ReplyAction="http://tempuri.org/IPracticeManager/ResetSiteResponse")]
        bool ResetSite(string siteId, string requestor);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPracticeManagerChannel : EnrollmentWorkflow.PracticeManager.IPracticeManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PracticeManagerClient : System.ServiceModel.ClientBase<EnrollmentWorkflow.PracticeManager.IPracticeManager>, EnrollmentWorkflow.PracticeManager.IPracticeManager {
        
        public PracticeManagerClient() {
        }
        
        public PracticeManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PracticeManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PracticeManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PracticeManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public long AddPractice(string siteId, EnrollmentWorkflow.PracticeManager.Practice practiceInfo, string userName) {
            return base.Channel.AddPractice(siteId, practiceInfo, userName);
        }
        
        public void AddPracticeNotes(EnrollmentWorkflow.PracticeManager.PracticeNotes practiceNotesInfo) {
            base.Channel.AddPracticeNotes(practiceNotesInfo);
        }
        
        public void UpdatePractice(string siteId, EnrollmentWorkflow.PracticeManager.Practice practiceInfo, string userName) {
            base.Channel.UpdatePractice(siteId, practiceInfo, userName);
        }
        
        public void RemovePractice(string siteId, int practiceId, string userName) {
            base.Channel.RemovePractice(siteId, practiceId, userName);
        }
        
        public EnrollmentWorkflow.PracticeManager.Practice[] GetPractices(string siteId) {
            return base.Channel.GetPractices(siteId);
        }
        
        public EnrollmentWorkflow.PracticeManager.Practice GetPracticeDataForPracticeId(long practiceId) {
            return base.Channel.GetPracticeDataForPracticeId(practiceId);
        }
        
        public int GetCountPracticesWithoutPayers(string siteId) {
            return base.Channel.GetCountPracticesWithoutPayers(siteId);
        }
        
        public long[] GetPracticeProviderInfoForPracticeId(long practiceId) {
            return base.Channel.GetPracticeProviderInfoForPracticeId(practiceId);
        }
        
        public System.Collections.Generic.Dictionary<int, EnrollmentWorkflow.PracticeManager.EnrollmentStatus> GetPracticeEnrollmentStatusForPracticeId(long practiceId) {
            return base.Channel.GetPracticeEnrollmentStatusForPracticeId(practiceId);
        }
        
        public void UpdatePracticePayerSubmittedDate(long practiceId, long[] payerListIds, System.DateTime submittedDate) {
            base.Channel.UpdatePracticePayerSubmittedDate(practiceId, payerListIds, submittedDate);
        }
        
        public bool PracticeExists(string billingNpi, string taxIdOrSsn, string siteId) {
            return base.Channel.PracticeExists(billingNpi, taxIdOrSsn, siteId);
        }
        
        public bool ResetSite(string siteId, string requestor) {
            return base.Channel.ResetSite(siteId, requestor);
        }
    }
}
