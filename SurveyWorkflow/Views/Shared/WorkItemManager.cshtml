
@using System
@using EnrollmentWorkflow.Models
@using Kendo.Mvc.UI

@model NewWorkItem

<div id="manageWorkItems">
    <div class="panel-body">
        <div class="panel panel-primary edit-container">
            <div class="panel-heading" data-toggle="collapse" data-target="#CreateWorkItem">
                <div class="float-left" name="indicator" style="margin-right:10px;">►</div>
                <div class="float-left">
                    Create New Work Item
                </div>
                <div class="clear-left clear-right"></div>
            </div>
            <div class="panel-body collapse" id="CreateWorkItem">
                @{Html.RenderPartial("CreateNewWorkItem");}
            </div>
        </div>
        <div class="panel panel-primary edit-container">
            <div class="panel-heading" data-toggle="collapse" data-target="#ActiveWorkItems">
                <div class="float-left" name="indicator" style="margin-right:10px;">▼</div>
                <div class="float-left">
                    Active / Inactive WorkItems
                </div>
                <div class="clear-left clear-right"></div>
            </div>
            <div class="panel-body collapse in" id="ActiveWorkItems">
                Show
                <input type="radio" value="active" id="activeWorkItem" name="workitemstatus" class="k-radio" checked="checked" onclick="toggleActiveItem()">
                <label class="k-radio-label" for="activeWorkItem">Active</label>
                <input type="radio" value="inActive" id="inActiveWorkItem" name="workitemstatus" class="k-radio" onclick="toggleActiveItem()">
                <label class="k-radio-label" for="inActiveWorkItem">InActive</label>

                <div style="margin-top: 20px">
                    @(Html.Kendo().Grid<WorkItemModel>().Name("workItemGridActiveList")
                            .DataSource(x => x
                                .Ajax()
                                .ServerOperation(true)
                                .Model(m =>
                                {
                                    m.Field("SiteId", typeof(string));
                                    m.Field("Vendor", typeof(string));
                                })
                            .PageSize(10)
                            .Read(readAction => readAction
                                                    .Action("LoadActiveWorkItems", "Reports")
                                                    .Data("isActiveWorkItemsSelected")))
                                                    .Columns(columns =>
                                                    {
                                                    columns.Bound(col => col.Id).Hidden(true);
                                                    columns.Bound(col => col.SiteId).Title("Site Id").Width(80)
                                                            .Filterable(f => f.Cell(c => c.ShowOperators(false).Operator("contains").Template(
                                                                    @<text> function (args) {
                                                                        args.element.css("width", "92%").addClass("k-textbox").keydown(function (e) {
                                                                            if (e.which != 13) {
                                                                                e.stopPropagation();
                                                                            }
                                                                            else{
                                                                                setTimeout(function(){
                                                                                    $(e.target).trigger("change");
                                                                                });
                                                                               }
                                                                            });
                                                                        }
                                                                    </text>)));
                                                    columns.Bound(col => col.Vendor).Title("Vendor").Width(150)
                                                                .Filterable(f => f.Cell(c => c.ShowOperators(false).Operator("contains").Template(
                                                                    @<text> function (args) {
                                                                        args.element.css("width", "98%").addClass("k-textbox").keydown(function (e) {
                                                                            if (e.which != 13) {
                                                                                e.stopPropagation();
                                                                            }
                                                                            else{
                                                                                setTimeout(function(){
                                                                                    $(e.target).trigger("change");
                                                                                });
                                                                               }
                                                                        });
                                                                    }
                                                                    </text>)));
                                                    columns.Bound(col => col.OfficeName).Title("Office").Width(100)
                                                                .Filterable(f => f.Cell(c => c.ShowOperators(false).Operator("contains").Template(
                                                                    @<text> function (args) {
                                                                        args.element.css("width", "94%").addClass("k-textbox").keydown(function (e) {
                                                                            if (e.which != 13) {
                                                                                e.stopPropagation();
                                                                            }
                                                                            else{
                                                                                setTimeout(function(){
                                                                                    $(e.target).trigger("change");
                                                                                });
                                                                               }
                                                                        });
                                                                    }
                                                                     </text>)));
                                                    columns.Bound(col => col.ContractDate).Title("Contract Date").Format("{0:MM/dd/yyyy}").Width(100).Filterable(false);
                                                    columns.Bound(col => col.GoLiveDate).Title("Go Live").Format("{0:MM/dd/yyyy}").Width(80).Filterable(false);
                                                    columns.Bound(col => col.Status).Title("Status").Width(95).Filterable(false);
                                                    columns.Bound(col => col.IsActive).Title("Active").Width(40).Filterable(false).Sortable(false)
                                                                .Template(@<text></text>)
                                                                .ClientTemplate(@"<input type='checkbox' class='chkActive' #= IsActive ? checked='checked':'' # >")
                                                                .HtmlAttributes(new { align = "center" });
                                                    })
                                                    .AutoBind(false)
                                                    .Sortable()
                                                    .Scrollable(s => s.Height("auto"))
                                                    .Filterable(f => f.Mode(GridFilterMode.Row))
                                                    .Pageable(pg => pg
                                                                        .Refresh(true)
                                                                        .PageSizes(new[] { 25, 50, 100 })
                                                                        .ButtonCount(5)))
                </div>
            </div>
        </div>
    </div>
</div>
