@using Kendo.Mvc.UI;

@model EnrollmentWorkflow.Models.EnrollmentDetailsModel

@{ 
    for (int i = 0; i < Model.PracticeDetails.Count; i++)
    {
        using (Html.BeginForm("Index", "Home", FormMethod.Post, new { id = "practiceInfoForm_" + Model.PracticeDetails[i].PracticeInfo.PracticeId, @class = "form-horizontal" }))
        {
        <div class="panel panel-primary edit-container">
            <div class="panel-heading" data-toggle="collapse" data-target="#practiceBody_@Model.PracticeDetails[i].PracticeInfo.PracticeId">
                <div name="indicator" class="float-left clear-left" style="margin-right:10px;">▼</div>
                <div class="float-left">
                    <label>Practice:</label> @Model.PracticeDetails[i].PracticeInfo.PracticeName
                    @Html.HiddenFor(x => x.PracticeDetails[i].PracticeInfo.PracticeId, new { @Name = "PracticeDetails.PracticeInfo.PracticeId" })
                    @Html.HiddenFor(x => x.SiteId, new { @Name ="SiteId" })
                </div>
                <div class="float-right">
                    <button class='btn btn-primary editBtn' type='button'>Edit</button>
                    <button class='btn btn-success saveBtn' type='button' disabled="disabled" onclick='savePracticeInformation(this);'>Save</button>
                    <button class='btn btn-danger cancelBtn' type='button' disabled="disabled">Cancel</button> 
                </div>
                <div class="clear-left clear-right"></div>
            </div>

            <div class="panel-body collapse in" id="practiceBody_@Model.PracticeDetails[i].PracticeInfo.PracticeId">
                <div class="row">
                    <label class="col-sm-2 control-label">Practice Name:</label>
                    <div class="editable">
                        <div class="col-sm-3">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.PracticeName, new { @Name="PracticeDetails.PracticeInfo.PracticeName" , @class = "form-control editable", @readonly = "readonly" })

                                <span class="input-group-btn">
                                    <button class='btn btn-primary noteBtn' type='button' disabled='disabled'>!</button>

                                </span>

                            </div>
                        </div>
                        <div name="notes" class="col-sm-2" style="@(String.IsNullOrEmpty(Model.PracticeDetails[i].PracticeInfo.NotePracticeName) ? "display:none;" : String.Empty)">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.NotePracticeName, new { @Name = "PracticeDetails.PracticeInfo.NotePracticeName", @class = "form-control note" })
                                <span class="input-group-btn">
                                    <button class='btn btn-danger noteCancel' type='button' disabled='disabled'>X</button>
                                </span>
                            </div>
                        </div>
                        <input type='hidden' name='currentValue' value='' />
                    </div>
                </div>
                <div class="row">
                    <label class="col-sm-2 control-label">Go-Live:</label>
                    <div class="editable">
                        <div class="col-sm-3">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.GoLiveDate, new { @Name = "PracticeDetails.PracticeInfo.GoLiveDate", @Value = (Model.PracticeDetails[i].PracticeInfo.GoLiveDate == null) ? String.Empty : Model.PracticeDetails[i].PracticeInfo.GoLiveDate.Value.ToString("d"), @class = "form-control editable", @readonly = "readonly" })
                                @*@(Html.Kendo().DatePickerFor(x => x.PracticeDetails[i].PracticeInfo.GoLiveDate)
                            .Name("goLiveDateDj" + @Model.Id)
                            .Enable(true))*@
                                <span class="input-group-btn">
                                    <button class='btn btn-primary noteBtn' type='button' disabled='disabled'>!</button>
                                </span>

                            </div>
                        </div>
                        <div name="notes" class="col-sm-2" style="@(String.IsNullOrEmpty(Model.PracticeDetails[i].PracticeInfo.NoteGoLiveDate) ? "display:none;" : String.Empty)">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.NoteGoLiveDate, new { @Name = "PracticeDetails.PracticeInfo.NoteGoLiveDate", @class = "form-control note" })
                                <span class="input-group-btn">
                                    <button class='btn btn-danger noteCancel' type='button' disabled='disabled'>X</button>
                                </span>
                            </div>
                        </div>
                        <input type='hidden' name='currentValue' value='' />
                    </div>
                </div>
                <div class="row">
                    <label class="col-sm-2 control-label">Tax ID Or SSN:</label>
                    <div class="editable">
                        <div class="col-sm-3">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.TaxIdOrSsn, new { @Name = "PracticeDetails.PracticeInfo.TaxIdOrSsn", @class = "form-control editable", @readonly = "readonly" })

                                <span class="input-group-btn">
                                    <button class='btn btn-primary noteBtn' type='button' disabled='disabled'>!</button>
                                </span>

                            </div>
                        </div>
                        <div name="notes" class="col-sm-2" style="@(String.IsNullOrEmpty(Model.PracticeDetails[i].PracticeInfo.NoteTaxIdOrSsn) ? "display:none;" : String.Empty)">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.NoteTaxIdOrSsn, new { @Name = "PracticeDetails.PracticeInfo.NoteTaxIdOrSsn", @class = "form-control note" })
                                <span class="input-group-btn">
                                    <button class='btn btn-danger noteCancel' type='button' disabled='disabled'>X</button>
                                </span>
                            </div>
                        </div>
                        <input type='hidden' name='currentValue' value='' />
                    </div>
                </div>
                <div class="row">
                    <label class="col-sm-2 control-label">Billing NPI:</label>
                    <div class="editable">
                        <div class="col-sm-3">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.BillingNpi, new { @Name = "PracticeDetails.PracticeInfo.BillingNpi", @class = "form-control editable", @readonly = "readonly" })

                                <span class="input-group-btn">
                                    <button class='btn btn-primary noteBtn' type='button' disabled='disabled'>!</button>
                                </span>

                            </div>
                        </div>
                        <div name="notes" class="col-sm-2" style="@(String.IsNullOrEmpty(Model.PracticeDetails[i].PracticeInfo.NoteBillingNpi) ? "display:none;" : String.Empty)">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.NoteBillingNpi, new { @Name = "PracticeDetails.PracticeInfo.NoteBillingNpi", @class = "form-control note" })
                                <span class="input-group-btn">
                                    <button class='btn btn-danger noteCancel' type='button' disabled='disabled'>X</button>
                                </span>
                            </div>
                        </div>
                        <input type='hidden' name='currentValue' value='' />
                    </div>
                </div>
                <div class="row">
                    <label class="col-sm-2 control-label">Doing Business As:</label>
                    <div class="editable">
                        <div class="col-sm-3">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.DoingBusinessAs, new { @Name = "PracticeDetails.PracticeInfo.DoingBusinessAs", @class = "form-control editable", @readonly = "readonly" })

                                <span class="input-group-btn">
                                    <button class='btn btn-primary noteBtn' type='button' disabled='disabled'>!</button>
                                </span>

                            </div>
                        </div>
                        <div name="notes" class="col-sm-2" style="@(String.IsNullOrEmpty(Model.PracticeDetails[i].PracticeInfo.NoteDoingBusinessAs) ? "display:none;" : String.Empty)">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.NoteDoingBusinessAs, new { @Name = "PracticeDetails.PracticeInfo.NoteDoingBusinessAs", @class = "form-control note" })
                                <span class="input-group-btn">
                                    <button class='btn btn-danger noteCancel' type='button' disabled='disabled'>X</button>
                                </span>
                            </div>
                        </div>
                        <input type='hidden' name='currentValue' value='' />
                    </div>
                </div>
                <div class="row">
                    <label class="col-sm-2 control-label">Address:</label>
                    <div class="editable">
                        <div class="col-sm-3">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.Address1, new { @Name = "PracticeDetails.PracticeInfo.Address1", @class = "form-control editable", @readonly = "readonly" })

                                <span class="input-group-btn">
                                    <button class='btn btn-primary noteBtn' type='button' disabled='disabled'>!</button>
                                </span>

                            </div>
                        </div>
                        <div name="notes" class="col-sm-2" style="@(String.IsNullOrEmpty(Model.PracticeDetails[i].PracticeInfo.NoteAddress1) ? "display:none;" : String.Empty)">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.NoteAddress1, new { @Name = "PracticeDetails.PracticeInfo.NoteAddress1", @class = "form-control note" })
                                <span class="input-group-btn">
                                    <button class='btn btn-danger noteCancel' type='button' disabled='disabled'>X</button>
                                </span>
                            </div>
                        </div>
                        <input type='hidden' name='currentValue' value='' />
                    </div>
                </div>
                <div class="row">
                    <label class="col-sm-2 control-label">Address 2:</label>
                    <div class="editable">
                        <div class="col-sm-3">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.Address2, new { @Name = "PracticeDetails.PracticeInfo.Address2", @class = "form-control editable", @readonly = "readonly" })

                                <span class="input-group-btn">
                                    <button class='btn btn-primary noteBtn' type='button' disabled='disabled'>!</button>
                                </span>

                            </div>
                        </div>
                        <div name="notes" class="col-sm-2" style="@(String.IsNullOrEmpty(Model.PracticeDetails[i].PracticeInfo.NoteAddress2) ? "display:none;" : String.Empty)">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.NoteAddress2, new { @Name = "PracticeDetails.PracticeInfo.NoteAddress2", @class = "form-control note" })
                                <span class="input-group-btn">
                                    <button class='btn btn-danger noteCancel' type='button' disabled='disabled'>X</button>
                                </span>
                            </div>
                        </div>
                        <input type='hidden' name='currentValue' value='' />
                    </div>
                </div>
                <div class="row">
                    <label class="col-sm-2 control-label">City:</label>
                    <div class="editable">
                        <div class="col-sm-3">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.City, new { @Name = "PracticeDetails.PracticeInfo.City", @class = "form-control editable", @readonly = "readonly" })

                                <span class="input-group-btn">
                                    <button class='btn btn-primary noteBtn' type='button' disabled='disabled'>!</button>
                                </span>

                            </div>
                        </div>
                        <div name="notes" class="col-sm-2" style="@(String.IsNullOrEmpty(Model.PracticeDetails[i].PracticeInfo.NoteCity) ? "display:none;" : String.Empty)">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.NoteCity, new { @Name = "PracticeDetails.PracticeInfo.NoteCity", @class = "form-control note" })
                                <span class="input-group-btn">
                                    <button class='btn btn-danger noteCancel' type='button' disabled='disabled'>X</button>
                                </span>
                            </div>
                        </div>
                        <input type='hidden' name='currentValue' value='' />
                    </div>
                </div>
                <div class="row">
                    <label class="col-sm-2 control-label">State:</label>
                    <div class="editable">
                        <div class="col-sm-3">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.State, new { @Name = "PracticeDetails.PracticeInfo.State", @class = "form-control editable", @readonly = "readonly" })

                                <span class="input-group-btn">
                                    <button class='btn btn-primary noteBtn' type='button' disabled='disabled'>!</button>
                                </span>

                            </div>
                        </div>
                        <div name="notes" class="col-sm-2" style="@(String.IsNullOrEmpty(Model.PracticeDetails[i].PracticeInfo.NoteState) ? "display:none;" : String.Empty)">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.NoteState, new { @Name = "PracticeDetails.PracticeInfo.NoteState", @class = "form-control note" })
                                <span class="input-group-btn">
                                    <button class='btn btn-danger noteCancel' type='button' disabled='disabled'>X</button>
                                </span>
                            </div>
                        </div>
                        <input type='hidden' name='currentValue' value='' />
                    </div>
                </div>
                <div class="row">
                    <label class="col-sm-2 control-label">Zip:</label>
                    <div class="editable">
                        <div class="col-sm-3">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.Zip, new { @Name = "PracticeDetails.PracticeInfo.Zip", @class = "form-control editable", @readonly = "readonly" })

                                <span class="input-group-btn">
                                    <button class='btn btn-primary noteBtn' type='button' disabled='disabled'>!</button>
                                </span>

                            </div>
                        </div>
                        <div name="notes" class="col-sm-2" style="@(String.IsNullOrEmpty(Model.PracticeDetails[i].PracticeInfo.NoteZip) ? "display:none;" : String.Empty)">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.PracticeDetails[i].PracticeInfo.NoteZip, new { @Name = "PracticeDetails.PracticeInfo.NoteZip", @class = "form-control note" })
                                <span class="input-group-btn">
                                    <button class='btn btn-danger noteCancel' type='button' disabled='disabled'>X</button>
                                </span>
                            </div>
                        </div>
                        <input type='hidden' name='currentValue' value='' />
                    </div>
                </div>
                <br />
                <div class="panel panel-info" id="payersPanel_@Model.PracticeDetails[i].PracticeInfo.PracticeId">
                    <div class="panel-heading" data-toggle="collapse" data-target="#payersBody_@Model.PracticeDetails[i].PracticeInfo.PracticeId">
                        <div name="indicator" class="float-left clear-left" style="margin-right:10px;">▼</div>
                        <div class="float-left">
                            <label>Payers</label>
                        </div>
                        <div class="clear-left"></div>
                    </div>
                    <div class="panel-body collapse in" id="payersBody_@Model.PracticeDetails[i].PracticeInfo.PracticeId">
                        @if (Model.PracticeDetails[i].PayerInfo.Count > 0)
                        {
                            for (int j = 0; j < Model.PracticeDetails[i].PayerInfo.Count; j++)
                            {
                                    <div class="@(Model.PracticeDetails[i].PayerInfo[j].OnHold != null && Model.PracticeDetails[i].PayerInfo[j].OnHold?"bg-danger":"bg-success")  col-sm-6 col-sm-offset-1 payer-container">

                                            <div class="row">
                                                <label class="col-sm-12">
                                                    @Model.PracticeDetails[i].PayerInfo[j].PayerId - @Model.PracticeDetails[i].PayerInfo[j].Name
                                                </label>
                                                <input type="hidden" name="PracticeDetails.PayerInfo[@j].Id" value="@Model.PracticeDetails[i].PayerInfo[j].Id" />
                                            </div>

                                            @if (Model.PracticeDetails[i].PayerInfo[j].OnHold != null && Model.PracticeDetails[i].PayerInfo[j].OnHold)
                                            {
                                                <div class="row">
                                                    <label class="col-sm-12">Held - @Model.PracticeDetails[i].PayerInfo[j].Message</label>
                                                </div>
                                            }

                                            <div class="row">

                                            @if (Model.PracticeDetails[i].PayerInfo[j].Claims != null && Model.PracticeDetails[i].PayerInfo[j].Claims)
                                            {
                                                    <label class="col-sm-2 col-sm-offset-1">Claims <span class="glyphicon glyphicon-ok"></span></label>
                                            }
                                            else
                                            {
                                                    <label class="col-sm-2 col-sm-offset-1">Claims <span class="glyphicon glyphicon-remove"></span></label>
                                            }

                                            @if (Model.PracticeDetails[i].PayerInfo[j].Remits != null && Model.PracticeDetails[i].PayerInfo[j].Remits)
                                            {
                                                    <label class="col-sm-2">Remits <span class="glyphicon glyphicon-ok"></span></label>
                                            }
                                            else
                                            {
                                                    <label class="col-sm-2">Remits <span class="glyphicon glyphicon-remove"></span></label>
                                            }
                                            </div>

                                            @if (!String.IsNullOrWhiteSpace(Model.PracticeDetails[i].PayerInfo[j].ProviderId))
                                            {
                                                <div class="row">
                                                    <label class="col-sm-2 control-label">Provider Id</label>
                                                    <div class="editable">
                                                        <div class="col-sm-4">
                                                            <div class="input-group">
                                                                @Html.TextBoxFor(x => x.PracticeDetails[i].PayerInfo[j].ProviderId, new { @Name = "PracticeDetails.PayerInfo[" + j + "].ProviderId", @class = "form-control editable", @readonly = "readonly" })
                                                                <span class="input-group-btn">
                                                                    <button class='btn btn-primary noteBtn' type='button' disabled='disabled'>!</button>
                                                                </span>
                                                            </div>
                                                        </div>
                                                        <div name="notes" class="col-sm-4" style="@(String.IsNullOrEmpty(Model.PracticeDetails[i].PayerInfo[j].NoteProviderId) ? "display:none;" : String.Empty)">
                                                            <div class="input-group">
                                                                @Html.TextBoxFor(x => x.PracticeDetails[i].PayerInfo[j].NoteProviderId, new { @Name = "PracticeDetails.PayerInfo[" + j + "].NoteProviderId", @class = "form-control note" })
                                                                <span class="input-group-btn">
                                                                    <button class='btn btn-danger noteCancel' type='button' disabled='disabled'>X</button>
                                                                </span>
                                                            </div>
                                                        </div>
                                                        <input type='hidden' name='currentValue' value='' />
                                                    </div>
                                                </div>
                                            }

                                        </div>
                            }
                        }
                </div>
                <div class="panel panel-info">
                    <div class="panel-heading" data-toggle="collapse" data-target="#providersBody_@Model.PracticeDetails[i].PracticeInfo.PracticeId">
                        <div name="indicator" class="float-left clear-left" style="margin-right:10px;">▼</div>
                        <div class="float-left">
                            <label>Providers</label>
                        </div>
                        <div class="clear-left"></div>
                    </div>

                    <div class="panel-body collapse in" id="providersBody_@Model.PracticeDetails[i].PracticeInfo.PracticeId">
                        @if (Model.PracticeDetails[i].ProviderInfo.Count > 0)
                        {
                            for (int k = 0; k < Model.PracticeDetails[i].ProviderInfo.Count; k++)
                            {
                                <div class="panel panel-info">

                                    <div class="panel-heading" data-toggle="collapse" data-target="#providerBody_@{@Model.PracticeDetails[i].PracticeInfo.PracticeId}_@k">
                                        <div name="indicator" class="float-left clear-left" style="margin-right:10px;">▼</div>
                                        <div class="float-left">
                                            <label>Provider:</label> @Model.PracticeDetails[i].ProviderInfo[k].LastName, @Model.PracticeDetails[i].ProviderInfo[k].FirstName
                                            @Html.HiddenFor(x => x.PracticeDetails[i].ProviderInfo[k].Id, new { @Name = "PracticeDetails.ProviderInfo[" + k + "].Id" })
                                        </div>
                                        <div class="clear-left"></div>
                                    </div>

                                    <div class="panel-body collapse in" id="providerBody_@{@Model.PracticeDetails[i].PracticeInfo.PracticeId}_@k">

                                        <div class="row">
                                            <label class="col-sm-2 control-label">First Name:</label>
                                            <div class="editable">
                                                <div class="col-sm-3">
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(x => x.PracticeDetails[i].ProviderInfo[k].FirstName, new { @Name = "PracticeDetails.ProviderInfo[" + k + "].FirstName", @class = "form-control editable", @readonly = "readonly" })

                                                        <span class="input-group-btn">
                                                            <button class='btn btn-primary noteBtn' type='button' disabled='disabled'>!</button>
                                                        </span>

                                                    </div>
                                                </div>
                                                <div name="notes" class="col-sm-2" style="@(String.IsNullOrEmpty(Model.PracticeDetails[i].ProviderInfo[k].NoteFirstName) ? "display:none;" : String.Empty)">
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(x => x.PracticeDetails[i].ProviderInfo[k].NoteFirstName, new { @Name = "PracticeDetails.ProviderInfo[" + k + "].NoteFirstName", @class = "form-control note"})
                                                        <span class="input-group-btn">
                                                            <button class='btn btn-danger noteCancel' type='button' disabled='disabled'>X</button>
                                                        </span>
                                                    </div>
                                                </div>
                                                <input type='hidden' name='currentValue' value='' />
                                            </div>
                                        </div>
                                        <div class="row">
                                            <label class="col-sm-2 control-label">Middle Initial:</label>
                                            <div class="editable">
                                                <div class="col-sm-3">
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(x => x.PracticeDetails[i].ProviderInfo[k].MiddleInitial, new { @Name = "PracticeDetails.ProviderInfo[" + k + "].MiddleInitial", @class = "form-control editable", @readonly = "readonly" })

                                                        <span class="input-group-btn">
                                                            <button class='btn btn-primary noteBtn' type='button' disabled='disabled'>!</button>
                                                        </span>

                                                    </div>
                                                </div>
                                                <div name="notes" class="col-sm-2" style="@(String.IsNullOrEmpty(Model.PracticeDetails[i].ProviderInfo[k].NoteMiddleInitial) ? "display:none;" : String.Empty)">
                                                    <div class="input-group">   
                                                        @Html.TextBoxFor(x => x.PracticeDetails[i].ProviderInfo[k].NoteMiddleInitial, new { @Name = "PracticeDetails.ProviderInfo[" + k + "].NoteMiddleInitial", @class = "form-control note" })
                                                        <span class="input-group-btn">
                                                            <button class='btn btn-danger noteCancel' type='button' disabled='disabled'>X</button>
                                                        </span>
                                                    </div>
                                                </div>
                                                <input type='hidden' name='currentValue' value='' />
                                            </div>
                                        </div>
                                        <div class="row">
                                            <label class="col-sm-2 control-label">Last Name:</label>
                                            <div class="editable">
                                                <div class="col-sm-3">
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(x => x.PracticeDetails[i].ProviderInfo[k].LastName, new { @Name = "PracticeDetails.ProviderInfo[" + k + "].LastName", @class = "form-control editable", @readonly = "readonly" })

                                                        <span class="input-group-btn">
                                                            <button class='btn btn-primary noteBtn' type='button' disabled='disabled'>!</button>
                                                        </span>

                                                    </div>
                                                </div>
                                                <div name="notes" class="col-sm-2" style="@(String.IsNullOrEmpty(Model.PracticeDetails[i].ProviderInfo[k].NoteLastName) ? "display:none;" : String.Empty)">
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(x => x.PracticeDetails[i].ProviderInfo[k].NoteLastName, new { @Name = "PracticeDetails.ProviderInfo[" + k + "].NoteLastName", @class = "form-control note" })
                                                        <span class="input-group-btn">
                                                            <button class='btn btn-danger noteCancel' type='button' disabled='disabled'>X</button>
                                                        </span>
                                                    </div>
                                                </div>
                                                <input type='hidden' name='currentValue' value='' />
                                            </div>
                                        </div>
                                        <div class="row">
                                            <label class="col-sm-2 control-label">Specialty:</label>
                                            <div class="editable">
                                                <div class="col-sm-3">
                                                    <div class="input-group">
                                                        @(Html.Kendo().DropDownListFor(x => x.PracticeDetails[i].ProviderInfo[k].Specialty)
                                                              .Name("PracticeDetails.ProviderInfo[" + k + "].Specialty")
                                                              .DataTextField("Text")
                                                              .DataValueField("Value")
                                                              .BindTo(new SelectList((IEnumerable<SelectListItem>)ViewBag.SpecialtyList, "Value", "Text"))
                                                              .HtmlAttributes(new { @class = "form-control editable", @readonly = "readonly" }))

                                                        <span class="input-group-btn">
                                                            <button class='btn btn-primary noteBtn' type='button' disabled='disabled'>!</button>
                                                        </span>

                                                    </div>
                                                </div>
                                                <div name="notes" class="col-sm-2" style="@(String.IsNullOrEmpty(Model.PracticeDetails[i].ProviderInfo[k].NoteSpecialty) ? "display:none;" : String.Empty)">
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(x => x.PracticeDetails[i].ProviderInfo[k].NoteSpecialty, new { @Name = "PracticeDetails.ProviderInfo[" + k + "].NoteSpecialty", @class = "form-control note" })
                                                        <span class="input-group-btn">
                                                            <button class='btn btn-danger noteCancel' type='button' disabled='disabled'>X</button>
                                                        </span>
                                                    </div>
                                                </div>
                                                <input type='hidden' name='currentValue' value='' />
                                            </div>
                                        </div>
                                        <div class="row">
                                            <label class="col-sm-2 control-label">Title:</label>
                                            <div class="editable">
                                                <div class="col-sm-3">
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(x => x.PracticeDetails[i].ProviderInfo[k].ProviderTitle, new { @Name = "PracticeDetails.ProviderInfo[" + k + "].ProviderTitle", @class = "form-control editable", @readonly = "readonly" })

                                                        <span class="input-group-btn">
                                                            <button class='btn btn-primary noteBtn' type='button' disabled='disabled'>!</button>
                                                        </span>

                                                    </div>
                                                </div>
                                                <div name="notes" class="col-sm-2" style="@(String.IsNullOrEmpty(Model.PracticeDetails[i].ProviderInfo[k].NoteProviderTitle) ? "display:none;" : String.Empty)">
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(x => x.PracticeDetails[i].ProviderInfo[k].NoteProviderTitle, new { @Name = "PracticeDetails.ProviderInfo[" + k + "].NoteProviderTitle", @class = "form-control note" })
                                                        <span class="input-group-btn">
                                                            <button class='btn btn-danger noteCancel' type='button' disabled='disabled'>X</button>
                                                        </span>
                                                    </div>
                                                </div>
                                                <input type='hidden' name='currentValue' value='' />
                                            </div>
                                        </div>
                                        <div class="row">
                                            <label class="col-sm-2 control-label">Individual Rendering NPI:</label>
                                            <div class="editable">
                                                <div class="col-sm-3">
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(x => x.PracticeDetails[i].ProviderInfo[k].IndividualRenderingNpi, new { @Name = "PracticeDetails.ProviderInfo[" + k + "].IndividualRenderingNpi", @class = "form-control editable", @readonly = "readonly" })

                                                        <span class="input-group-btn">
                                                            <button class='btn btn-primary noteBtn' type='button' disabled='disabled'>!</button>
                                                        </span>

                                                    </div>
                                                </div>
                                                <div name="notes" class="col-sm-2" style="@(String.IsNullOrEmpty(Model.PracticeDetails[i].ProviderInfo[k].NoteIndividualRenderingNpi) ? "display:none;" : String.Empty)">
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(x => x.PracticeDetails[i].ProviderInfo[k].NoteIndividualRenderingNpi, new { @Name = "PracticeDetails.ProviderInfo[" + k + "].NoteIndividualRenderingNpi", @class = "form-control note" })
                                                        <span class="input-group-btn">
                                                            <button class='btn btn-danger noteCancel' type='button' disabled='disabled'>X</button>
                                                        </span>
                                                    </div>
                                                </div>
                                                <input type='hidden' name='currentValue' value='' />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>

        </div>
            </div>
        }
    }
}